{
  "name": "cody-ai",
  "private": true,
  "displayName": "Cody AI",
  "version": "0.14.0",
  "publisher": "sourcegraph",
  "license": "Apache-2.0",
  "icon": "resources/cody.png",
  "description": "Code AI with codebase context",
  "scripts": {
    "postinstall": "pnpm download-wasm",
    "dev": "pnpm run -s dev:desktop",
    "dev:insiders": "pnpm run -s dev:desktop:insiders",
    "start:dev:desktop": "NODE_ENV=development code --extensionDevelopmentPath=$PWD --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --disable-extension=github.copilot-nightly --inspect-extensions=9333 --new-window . --goto ./src/logged-rerank.ts:16:5",
    "dev:desktop": "pnpm run -s build:dev:desktop && pnpm run start:dev:desktop",
    "dev:desktop:insiders": "pnpm run -s build:dev:desktop && NODE_ENV=development code-insiders --extensionDevelopmentPath=$PWD --disable-extension=sourcegraph.cody-ai --disable-extension=github.copilot --disable-extension=github.copilot-nightly --inspect-extensions=9333 --new-window . --goto ./src/logged-rerank.ts:16:5",
    "dev:web": "pnpm run -s build:dev:web && pnpm run -s _dev:vscode-test-web --browserType none",
    "watch:dev:web": "concurrently \"pnpm run -s watch:build:dev:web\" \"pnpm run -s _dev:vscode-test-web --browserType none\"",
    "_dev:vscode-test-web": "vscode-test-web --extensionDevelopmentPath=. ${WORKSPACE-test/fixtures/workspace}",
    "build": "tsc --build && pnpm run -s _build:esbuild:desktop && pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production",
    "_build:desktop": "pnpm run -s _build:esbuild:desktop && pnpm run -s _build:webviews --mode production",
    "_build:web": "pnpm run -s _build:esbuild:web && pnpm run -s _build:webviews --mode production",
    "build:dev:desktop": "concurrently \"pnpm run -s _build:esbuild:desktop\" \"pnpm run -s _build:webviews --mode development\"",
    "build:dev:web": "concurrently \"pnpm run -s _build:esbuild:web\" \"pnpm run -s _build:webviews --mode development\"",
    "watch:build:dev:web": "concurrently \"pnpm run -s _build:esbuild:web --watch\" \"pnpm run -s _build:webviews --mode development --watch\"",
    "watch:build:dev:desktop": "concurrently \"pnpm run -s _build:esbuild:desktop --watch\" \"pnpm run -s _build:webviews --mode development --watch\"",
    "_build:esbuild:desktop": "pnpm download-wasm && esbuild ./src/extension.node.ts --bundle --outfile=dist/extension.node.js --external:vscode --format=cjs --platform=node --sourcemap",
    "_build:esbuild:web": "esbuild ./src/extension.web.ts --platform=browser --bundle --outfile=dist/extension.web.js --alias:path=path-browserify --alias:os=os-browserify --external:vscode --define:process='{\"env\":{}}' --define:window=self --format=cjs --sourcemap",
    "_build:webviews": "vite -c webviews/vite.config.ts build",
    "lint": "pnpm run lint:js",
    "lint:js": "NODE_OPTIONS=--max-old-space-size=4096 eslint --quiet --cache '**/*.[tj]s?(x)'",
    "release": "ts-node ./scripts/release.ts",
    "download-wasm": "ts-node-transpile-only ./scripts/download-wasm-modules.ts",
    "release:dry-run": "pnpm run download-wasm && CODY_RELEASE_DRY_RUN=1 ts-node ./scripts/release.ts",
    "storybook": "storybook dev -p 6007 --no-open --no-version-updates --no-release-notes",
    "test:e2e": "tsc --build && { pnpm exec playwright install chromium & install_pw_pid=$!; node dist/tsc/test/e2e/install-deps.js & install_vscode_pid=$!; wait $install_pw_pid && wait $install_vscode_pid; } && pnpm run -s build:dev:desktop && playwright test",
    "test:integration": "tsc --build ./test/integration && pnpm run -s build:dev:desktop && node --inspect -r ts-node/register dist/tsc/test/integration/main.js",
    "test:benchmark": "BENCHMARK_DISABLE_FEATURE_FLAGS=true tsc --build ./test/benchmark && pnpm run -s build:dev:desktop && ./benchmark.sh",
    "test:benchmark:copilot": "BENCHMARK_COMPARE_WITH=github.copilot pnpm run test:benchmark",
    "test:unit": "vitest",
    "vscode:prepublish": "pnpm -s run build",
    "generate:completions": "OUTFILE=/tmp/run-code-completions-on-dataset.js && esbuild ./test/completions/run-code-completions-on-dataset.ts --bundle --external:vscode --outfile=$OUTFILE --format=cjs --platform=node --sourcemap=inline && node --enable-source-maps $OUTFILE",
    "test:unit:tree-sitter-queries": "vitest vscode/src/completions/tree-sitter/query-tests/**/*.test.ts"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Snippets",
    "Education"
  ],
  "keywords": [
    "ai",
    "openai",
    "anthropic",
    "assistant",
    "chatbot",
    "chat",
    "refactor",
    "documentation",
    "test",
    "sourcegraph",
    "codey",
    "llm",
    "codegen",
    "autocomplete",
    "bot",
    "model",
    "typescript",
    "javascript",
    "python",
    "golang",
    "go",
    "html",
    "css",
    "java",
    "php",
    "swift",
    "kotlin"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/sourcegraph/cody",
    "directory": "vscode"
  },
  "bugs": {
    "url": "https://github.com/sourcegraph/cody/issues"
  },
  "homepage": "https://docs.sourcegraph.com/cody",
  "badges": [
    {
      "url": "https://img.shields.io/discord/969688426372825169?color=5765F2",
      "href": "https://srcgr.ph/discord",
      "description": "Discord"
    }
  ],
  "engines": {
    "vscode": "^1.79.0"
  },
  "main": "./dist/extension.node.js",
  "browser": "./dist/extension.web.js",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "walkthroughs": [
      {
        "id": "welcome",
        "title": "Getting Started with Cody",
        "description": "Discover how Cody can help you write and understand code faster.",
        "steps": [
          {
            "id": "chat",
            "title": "Ask Cody a Question",
            "description": "Cody writes code and answers questions using your own code graph as context.\n[Open Chat](command:cody.walkthrough.showChat)",
            "media": {
              "markdown": "walkthroughs/chat.md"
            }
          },
          {
            "id": "commands",
            "title": "Cody Commands",
            "description": "You can use Cody commands to streamline your development process (e.g. generate unit tests, documentation, and more) with just a few clicks.\n[Open Commands Menu](command:cody.action.commands.menu)",
            "media": {
              "markdown": "walkthroughs/commands.md"
            }
          },
          {
            "id": "explain",
            "title": "Explain Code",
            "description": "Ask Cody to explain some code. Select some lines and use the \"Explain Code\" command.\n[Open Commands Menu](command:cody.action.commands.menu)",
            "media": {
              "markdown": "walkthroughs/explain.md"
            }
          },
          {
            "id": "inline-assist",
            "title": "Inline Chat",
            "description": "Chat with Cody without leaving your file. Click the + button next to any line number in a file to bring up Inline Chat.\n[Enable in Settings](command:cody.walkthrough.enableInlineChat)",
            "media": {
              "markdown": "walkthroughs/inline-assist.md"
            }
          },
          {
            "id": "autocomplete",
            "title": "Code Autocomplete",
            "description": "Let Cody automatically write code for you. Start writing a comment or a line of code and Cody will suggest the next few lines.",
            "media": {
              "markdown": "walkthroughs/autocomplete.md"
            }
          },
          {
            "id": "learn-more",
            "title": "Learn More & Feedback",
            "description": "üìñ Dive deeper into Cody by reading our [full documentation](https://docs.sourcegraph.com/cody).\nüé® Discover more features by searching for \"Cody\" in the [Command Palette](command:workbench.action.showCommands).\nüóíÔ∏è Find out how Cody is improving by taking a look at the [Changelog](https://sourcegraph.com/github.com/sourcegraph/cody/-/blob/vscode/CHANGELOG.md).\nüí¨ Bugs, ideas or feedback? Post a message on our [GitHub Discussions](https://github.com/sourcegraph/cody/discussions/new?category=product-feedback&labels=vscode).",
            "media": {
              "markdown": "walkthroughs/learn-more.md"
            }
          }
        ]
      }
    ],
    "colors": [
      {
        "id": "cody.fixup.conflictBackground",
        "description": "The background of text Cody will edit where there is a specific conflict with your changes.",
        "defaults": {
          "light": "mergeEditor.conflictingLines.background",
          "dark": "mergeEditor.conflictingLines.background"
        }
      },
      {
        "id": "cody.fixup.conflictBorder",
        "description": "The border of text Cody will edit, if there is a conflict with your changes.",
        "defaults": {
          "light": "mergeEditor.conflict.unhandledFocused.border",
          "dark": "mergeEditor.conflict.unhandledFocused.border"
        }
      },
      {
        "id": "cody.fixup.conflictedBackground",
        "description": "The background of text Cody will edit, if there is a conflict with your changes.",
        "defaults": {
          "light": "#ffffff00",
          "dark": "#00000000"
        }
      },
      {
        "id": "cody.fixup.conflictedBorder",
        "description": "The border of text Cody will edit, if there is a conflict with your changes.",
        "defaults": {
          "light": "mergeEditor.conflict.unhandledUnfocused.border",
          "dark": "mergeEditor.conflict.unhandledUnfocused.border"
        }
      },
      {
        "id": "cody.fixup.incomingBackground",
        "description": "The background of text Cody will edit.",
        "defaults": {
          "light": "merge.incomingContentBackground",
          "dark": "merge.incomingContentBackground"
        }
      },
      {
        "id": "cody.fixup.incomingBorder",
        "description": "The border around text Cody will edit.",
        "defaults": {
          "light": "#436EB1",
          "dark": "#436EB1"
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cody",
          "title": "Cody",
          "icon": "resources/cody.svg"
        }
      ]
    },
    "views": {
      "cody": [
        {
          "type": "webview",
          "id": "cody.chat",
          "name": "Chat",
          "visibility": "visible"
        },
        {
          "id": "cody.fixup.tree.view",
          "name": "Fixups",
          "when": "cody.nonstop.fixups.enabled && cody.activated",
          "icon": "cody.svg",
          "contextualTitle": "Fixups"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "cody.fixup.tree.view",
        "contents": "No pending Cody fixups",
        "when": "cody.nonstop.fixups.enabled && cody.activated"
      }
    ],
    "commands": [
      {
        "command": "cody.welcome",
        "title": "Help & Getting Started",
        "category": "Cody",
        "group": "Cody",
        "icon": "$(book)"
      },
      {
        "command": "cody.feedback",
        "title": "Feedback",
        "category": "Cody",
        "group": "Cody",
        "icon": "$(feedback)"
      },
      {
        "command": "cody.command.edit-code",
        "category": "Ask Cody",
        "title": "Edit Code",
        "icon": "$(sparkle)"
      },
      {
        "command": "cody.command.explain-code",
        "category": "Ask Cody",
        "title": "Explain Code"
      },
      {
        "command": "cody.command.generate-tests",
        "category": "Ask Cody",
        "title": "Generate Unit Tests"
      },
      {
        "command": "cody.command.document-code",
        "category": "Ask Cody",
        "title": "Document Code"
      },
      {
        "command": "cody.command.smell-code",
        "category": "Ask Cody",
        "title": "Find Code Smells"
      },
      {
        "command": "cody.command.context-search",
        "category": "Ask Cody",
        "title": "Codebase Context Search"
      },
      {
        "command": "cody.auth.signout",
        "category": "Cody",
        "title": "Sign Out",
        "icon": "$(sign-out)"
      },
      {
        "command": "cody.auth.signin",
        "category": "Cody",
        "title": "Switch Account‚Ä¶"
      },
      {
        "command": "cody.settings.extension",
        "category": "Cody",
        "title": "Extension Settings",
        "group": "Cody",
        "icon": "$(gear)"
      },
      {
        "command": "cody.focus",
        "category": "Cody",
        "title": "Sign In"
      },
      {
        "command": "cody.interactive.clear",
        "category": "Cody",
        "title": "Start a New Chat Session",
        "group": "Cody",
        "icon": "$(add)"
      },
      {
        "command": "cody.history",
        "category": "Cody",
        "title": "Chat History",
        "group": "Cody",
        "icon": "$(history)"
      },
      {
        "command": "cody.status-bar.interacted",
        "category": "Cody",
        "title": "Cody Settings",
        "group": "Cody",
        "icon": "$(settings-gear)",
        "when": "cody.activated"
      },
      {
        "command": "cody.comment.add",
        "title": "Ask Cody",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "!commentIsEmpty && !cody.inline.reply.pending"
      },
      {
        "command": "cody.comment.stop",
        "title": "Stop generating",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(debug-stop)"
      },
      {
        "command": "cody.comment.delete",
        "title": "Remove Inline Chat",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(trash)"
      },
      {
        "command": "cody.comment.open-in-sidebar",
        "title": "Open this chat in the sidebar",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "cody.comment.collapse-all",
        "title": "Collapse All Inline Chats",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "!commentThreadIsEmpty",
        "icon": "$(collapse-all)"
      },
      {
        "command": "cody.inline.new",
        "title": "Ask Cody Inline",
        "category": "Cody Inline Chat",
        "when": "cody.activated && config.cody.inlineChat.enabled",
        "enablement": "editorFocus && config.cody.inlineChat.enabled"
      },
      {
        "command": "cody.guardrails.debug",
        "category": "Cody",
        "title": "Guardrails Debug Attribution",
        "enablement": "config.cody.experimental.guardrails && editorHasSelection"
      },
      {
        "command": "cody.command.inline-touch",
        "category": "Cody",
        "title": "Touch"
      },
      {
        "command": "cody.fixup.open",
        "category": "Cody",
        "title": "Go to Fixup",
        "icon": "$(file-code)"
      },
      {
        "command": "cody.fixup.apply",
        "category": "Cody",
        "title": "Apply fixup",
        "when": "cody.nonstop.fixups.enabled",
        "enablement": "!cody.fixup.view.isEmpty",
        "icon": "$(check)"
      },
      {
        "command": "cody.fixup.apply-all",
        "category": "Cody",
        "title": "Apply all fixups",
        "when": "cody.nonstop.fixups.enabled",
        "enablement": "!cody.fixup.view.isEmpty",
        "icon": "$(check-all)"
      },
      {
        "command": "cody.fixup.apply-by-file",
        "category": "Cody",
        "title": "Apply fixups to selected directory",
        "when": "cody.nonstop.fixups.enabled",
        "enablement": "!cody.fixup.view.isEmpty",
        "icon": "$(check-all)"
      },
      {
        "command": "cody.fixup.diff",
        "category": "Cody",
        "title": "Show diff for fixup",
        "when": "cody.nonstop.fixups.enabled",
        "enablement": "!cody.fixup.view.isEmpty",
        "icon": "$(diff)"
      },
      {
        "command": "cody.action.commands.custom.menu",
        "category": "Ask Cody",
        "title": "Custom Commands",
        "when": "cody.activated",
        "icon": "$(bookmark)"
      },
      {
        "command": "cody.action.commands.menu",
        "category": "Cody",
        "title": "Commands",
        "when": "cody.activated",
        "icon": "$(cody-logo)"
      },
      {
        "command": "cody.autocomplete.openTraceView",
        "category": "Cody",
        "title": "Open Autocomplete Trace View",
        "when": "cody.activated && config.cody.autocomplete && config.cody.debug.enable && editorHasFocus && !editorReadonly"
      }
    ],
    "keybindings": [
      {
        "command": "cody.chat.focus",
        "key": "alt+/",
        "mac": "alt+/"
      },
      {
        "command": "cody.command.edit-code",
        "key": "ctrl+shift+v",
        "mac": "shift+cmd+v",
        "when": "cody.activated && !editorReadonly"
      },
      {
        "command": "cody.command.inline-touch",
        "key": "ctrl+alt+/",
        "mac": "cmd+alt+/",
        "when": "cody.activated && editorTextFocus && editorHasSelection && config.cody.inlineChat.enabled"
      },
      {
        "command": "cody.inline.new",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c",
        "when": "cody.activated && editorFocus && config.cody.inlineChat.enabled",
        "enablement": "config.cody.inlineChat.enabled"
      },
      {
        "command": "cody.action.commands.menu",
        "key": "alt+c",
        "mac": "alt+c",
        "when": "cody.activated"
      },
      {
        "command": "-github.copilot.generate",
        "key": "ctrl+enter"
      },
      {
        "command": "cody.autocomplete.manual-trigger",
        "key": "alt+\\",
        "when": "editorTextFocus && !editorHasSelection && config.cody.autocomplete.enabled && !inlineSuggestionsVisible"
      }
    ],
    "submenus": [
      {
        "label": "Cody",
        "id": "cody.submenu"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "cody.command.explain-code",
          "when": "false"
        },
        {
          "command": "cody.command.context-search",
          "when": "false"
        },
        {
          "command": "cody.command.inline-touch",
          "when": "false"
        },
        {
          "command": "cody.command.smell-code",
          "when": "false"
        },
        {
          "command": "cody.command.generate-tests",
          "when": "false"
        },
        {
          "command": "cody.command.document-code",
          "when": "false"
        },
        {
          "command": "cody.focus",
          "title": "Cody: Sign In",
          "when": "!cody.activated"
        },
        {
          "command": "cody.comment.add",
          "when": "false"
        },
        {
          "command": "cody.comment.delete",
          "when": "false"
        },
        {
          "command": "cody.comment.stop",
          "when": "false"
        },
        {
          "command": "cody.comment.open-in-sidebar",
          "when": "false"
        },
        {
          "command": "cody.comment.collapse-all",
          "when": "false"
        },
        {
          "command": "cody.fixup.apply",
          "when": "false"
        },
        {
          "command": "cody.fixup.apply-all",
          "when": "false"
        },
        {
          "command": "cody.fixup.apply-by-file",
          "when": "false"
        },
        {
          "command": "cody.fixup.diff",
          "when": "false"
        },
        {
          "command": "cody.fixup.open",
          "when": "false"
        },
        {
          "command": "cody.guardrails.debug",
          "when": "config.cody.experimental.guardrails && editorHasSelection"
        },
        {
          "command": "cody.action.commands.custom.menu",
          "when": "cody.activated"
        }
      ],
      "editor/context": [
        {
          "submenu": "cody.submenu",
          "group": "0_cody"
        }
      ],
      "cody.submenu": [
        {
          "command": "cody.command.explain-code",
          "when": "cody.activated",
          "group": "command"
        },
        {
          "command": "cody.command.edit-code",
          "when": "cody.activated",
          "group": "ask"
        },
        {
          "command": "cody.command.generate-tests",
          "when": "cody.activated",
          "group": "command"
        },
        {
          "command": "cody.command.document-code",
          "when": "cody.activated",
          "group": "command"
        },
        {
          "command": "cody.command.smell-code",
          "when": "cody.activated",
          "group": "command"
        },
        {
          "command": "cody.action.commands.custom.menu",
          "when": "cody.activated",
          "group": "command"
        },
        {
          "command": "cody.focus",
          "when": "!cody.activated",
          "group": "other"
        },
        {
          "command": "cody.guardrails.debug",
          "when": "cody.activated && config.cody.experimental.guardrails && editorHasSelection",
          "group": "other"
        },
        {
          "command": "cody.inline.new",
          "when": "cody.activated",
          "group": "ask"
        }
      ],
      "view/title": [
        {
          "command": "cody.interactive.clear",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@1"
        },
        {
          "command": "cody.history",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@2"
        },
        {
          "command": "cody.status-bar.interacted",
          "when": "view == cody.chat && cody.activated",
          "group": "navigation@4"
        },
        {
          "command": "cody.feedback",
          "when": "view == cody.chat",
          "group": "7_cody@0"
        },
        {
          "command": "cody.welcome",
          "when": "view == cody.chat",
          "group": "7_cody@0"
        },
        {
          "command": "cody.auth.signout",
          "when": "view == cody.chat && cody.activated",
          "group": "9_cody@2"
        },
        {
          "command": "cody.auth.signin",
          "when": "view == cody.chat && cody.activated",
          "group": "9_cody@0"
        },
        {
          "command": "cody.fixup.apply-all",
          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "cody.action.commands.menu",
          "when": "cody.activated && config.cody.experimental.editorTitleCommandIcon",
          "group": "navigation",
          "visibility": "visible"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "cody.comment.add",
          "group": "inline",
          "when": "cody.activated && commentController =~ /^cody-inline/ && config.cody.inlineChat.enabled"
        },
        {
          "command": "cody.focus",
          "group": "inline",
          "when": "!cody.activated && commentController =~ /^cody-inline/ && config.cody.inlineChat.enabled"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "cody.comment.delete",
          "group": "inline@1",
          "when": "cody.activated && commentController =~ /^cody-inline/ && cody.replied && !commentThreadIsEmpty && config.cody.inlineChat.enabled"
        },
        {
          "command": "cody.comment.open-in-sidebar",
          "group": "inline@2",
          "when": "cody.activated && commentController =~ /^cody-inline/ && cody.replied && config.cody.inlineChat.enabled"
        },
        {
          "command": "cody.comment.collapse-all",
          "group": "inline@3",
          "when": "cody.activated && commentController =~ /^cody-inline/ && config.cody.inlineChat.enabled"
        }
      ],
      "comments/comment/title": [
        {
          "command": "cody.comment.stop",
          "group": "inline@1",
          "when": "cody.activated && commentController =~ /^cody-inline/ && comment =~ /^cody-inline-(streaming|loading)/ && config.cody.inlineChat.enabled"
        }
      ],
      "view/item/context": [
        {
          "command": "cody.fixup.apply-by-file",
          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated && viewItem == fsPath",
          "enable": "cody.fixup.filesWithApplicableFixups",
          "group": "inline"
        },
        {
          "command": "cody.fixup.apply",
          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated && viewItem == task",
          "group": "inline@2"
        },
        {
          "command": "cody.fixup.diff",
          "when": "cody.nonstop.fixups.enabled && view == cody.fixup.tree.view && cody.activated && viewItem == task",
          "group": "inline@1"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Cody",
      "properties": {
        "cody.serverEndpoint": {
          "order": 1,
          "type": "string",
          "description": "URL to the Sourcegraph instance.",
          "examples": "https://example.sourcegraph.com",
          "markdownDeprecationMessage": "**Deprecated**: Please sign in via the UI instead. If you are already signed in, you can empty this field to remove this warning.",
          "deprecationMessage": "Deprecated: Please sign in via the UI instead."
        },
        "cody.proxy": {
          "type": "string",
          "markdownDeprecationMessage": "The SOCKS proxy endpoint to access server endpoint. This is only supported with some autocomplete providers and only for use with the Cody Agent (for instance with JetBrains plugin). For VS Code please use http.proxy instead."
        },
        "cody.codebase": {
          "order": 2,
          "type": "string",
          "markdownDescription": "The Git repository URL for your code. This will be sent to the Sourcegraph API to fetch the code graph context data. When set to empty, the URL will be inferred from your Git metadata.",
          "examples": [
            "https://github.com/sourcegraph/cody",
            "ssh://git@github.com/sourcegraph/cody"
          ]
        },
        "cody.useContext": {
          "order": 3,
          "type": "string",
          "enum": [
            "embeddings",
            "keyword",
            "none",
            "blended"
          ],
          "default": "embeddings",
          "markdownDescription": "If 'embeddings' is selected, Cody will prefer to use an embeddings-based index when fetching context to generate responses to user requests. If no such index is found, it will fall back to using keyword-based local context fetching. If 'keyword' is selected, Cody will use keyword context. Selecting 'none' will limit Cody to using only the currently open file."
        },
        "cody.customHeaders": {
          "order": 4,
          "type": "object",
          "markdownDescription": "Adds custom HTTP headers to all network requests to the Sourcegraph endpoint. Defining required headers here ensures requests are properly forwarded through intermediary proxy servers, which may mandate certain custom headers for internal or external communication.",
          "default": {},
          "examples": [
            {
              "Cache-Control": "no-cache",
              "Proxy-Authenticate": "Basic"
            }
          ]
        },
        "cody.autocomplete.enabled": {
          "order": 5,
          "type": "boolean",
          "markdownDescription": "Enables inline code suggestions in your editor.",
          "default": true
        },
        "cody.autocomplete.languages": {
          "order": 5,
          "type": "object",
          "markdownDescription": "Enable or disable inline code suggestions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers).",
          "default": {
            "*": true,
            "scminput": false
          }
        },
        "cody.inlineChat.enabled": {
          "order": 6,
          "title": "Cody Inline Chat",
          "type": "boolean",
          "markdownDescription": "Enables asking questions and requesting code changes directly from within the code editor. Use the + button next to any line of code to start an inline chat.",
          "default": true
        },
        "cody.experimental.chatPredictions": {
          "order": 7,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Adds suggestions of possible relevant messages in the chat window."
        },
        "cody.experimental.commandLenses": {
          "order": 8,
          "type": "boolean",
          "markdownDescription": "[Experimental] Adds code lenses to current file for quick access to Cody commands.",
          "default": false
        },
        "cody.experimental.editorTitleCommandIcon": {
          "order": 8,
          "type": "boolean",
          "markdownDescription": "[Experimental] Adds an editor title menu icon for quick access to Cody commands.",
          "default": false
        },
        "cody.experimental.guardrails": {
          "order": 9,
          "type": "boolean",
          "markdownDescription": "Experimental feature for internal use.",
          "default": false
        },
        "cody.experimental.nonStop": {
          "order": 9,
          "type": "boolean",
          "markdownDescription": "Experimental feature for internal use.",
          "default": false
        },
        "cody.experimental.localSymbols": {
          "order": 9,
          "type": "boolean",
          "default": false,
          "markdownDescription": "Experimental feature for internal use."
        },
        "cody.chat.preInstruction": {
          "order": 10,
          "type": "string",
          "markdownDescription": "An instruction to be included at the start of all chat messages sent to Cody. Extension reload required.",
          "examples": [
            "Answer all my questions in Spanish."
          ]
        },
        "cody.codeActions.enabled": {
          "order": 11,
          "title": "Cody Code Actions",
          "type": "boolean",
          "markdownDescription": "Enable Cody fix and explain options in the Quick Fix menu",
          "default": true
        },
        "cody.experimental.symf.path": {
          "order": 99,
          "type": "string",
          "markdownDescription": "Path to symf binary",
          "default": ""
        },
        "cody.debug.enable": {
          "order": 99,
          "type": "boolean",
          "markdownDescription": "Turns on debug output (visible in the VS Code Output panel under \"Cody by Sourcegraph\")"
        },
        "cody.debug.verbose": {
          "order": 99,
          "type": "boolean",
          "markdownDescription": "Enables verbose debug output. Debug messages may contain more details if the invocation includes verbose information."
        },
        "cody.debug.filter": {
          "order": 99,
          "type": "string",
          "markdownDescription": "Regular expression to filter debug output. If empty, defaults to '.*', which prints all messages."
        },
        "cody.telemetry.level": {
          "order": 99,
          "type": "string",
          "enum": [
            "all",
            "off"
          ],
          "enumDescriptions": [
            "Sends usage data and errors.",
            "Disables all extension telemetry."
          ],
          "markdownDescription": "Controls the telemetry about Cody usage and errors. See [Cody usage and privacy notice](https://about.sourcegraph.com/terms/cody-notice).",
          "default": "all"
        },
        "cody.autocomplete.advanced.provider": {
          "type": "string",
          "default": null,
          "enum": [
            null,
            "anthropic",
            "fireworks",
            "unstable-openai"
          ],
          "markdownDescription": "The provider used for code autocomplete. Most providers other than `anthropic` require the `cody.autocomplete.advanced.serverEndpoint` and `cody.autocomplete.advanced.accessToken` settings to also be set. Check the Cody output channel for error messages if autocomplete is not working as expected."
        },
        "cody.autocomplete.advanced.serverEndpoint": {
          "type": "string",
          "markdownDescription": "The server endpoint used for code autocomplete. This is only supported with a provider other than `anthropic`."
        },
        "cody.autocomplete.advanced.accessToken": {
          "type": "string",
          "markdownDescription": "The access token used for code autocomplete. This is only supported with a provider other than `anthropic`."
        },
        "cody.autocomplete.advanced.model": {
          "type": "string",
          "default": null,
          "enum": [
            null,
            "starcoder-16b",
            "starcoder-7b",
            "starcoder-3b",
            "starcoder-1b",
            "wizardcoder-15b",
            "llama-code-7b",
            "llama-code-13b",
            "llama-code-13b-instruct"
          ],
          "markdownDescription": "Overwrite the  model used for code autocompletion inference. This is only supported with the `unstable-fireworks` provider"
        },
        "cody.autocomplete.completeSuggestWidgetSelection": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Autocomplete based on the currently selection in the suggest widget. Requires the VS Code user setting `editor.inlineSuggest.suppressSuggestions` set to true and will change it to true in user settings if it is not true."
        },
        "cody.autocomplete.experimental.syntacticPostProcessing": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Rank autocomplete results with tree-sitter."
        },
        "cody.autocomplete.experimental.graphContext": {
          "type": "enum",
          "default": null,
          "enum": [
            null,
            "lsp-light"
          ],
          "markdownDescription": "Retrieve information from the code graph to augment the autocomplete results. This is only supported with the `unstable-codegen` provider"
        }
      }
    },
    "icons": {
      "cody-logo": {
        "description": "Cody logo",
        "default": {
          "fontPath": "resources/cody-icons.woff",
          "fontCharacter": "\\0041"
        }
      },
      "cody-logo-heavy": {
        "description": "Cody logo heavy",
        "default": {
          "fontPath": "resources/cody-icons.woff",
          "fontCharacter": "\\0042"
        }
      }
    }
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.4.2",
    "@mdi/js": "^7.2.96",
    "@sentry/browser": "^7.66.0",
    "@sentry/core": "^7.66.0",
    "@sentry/node": "^7.66.0",
    "@sourcegraph/cody-shared": "workspace:*",
    "@sourcegraph/cody-ui": "workspace:*",
    "@types/stream-json": "^1.7.3",
    "@vscode/codicons": "^0.0.29",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "axios": "^1.6.0",
    "classnames": "^2.3.2",
    "date-fns": "^2.30.0",
    "detect-indent": "^7.0.1",
    "glob": "^7.2.3",
    "isomorphic-fetch": "^3.0.0",
    "js-levenshtein": "^1.1.6",
    "lodash": "^4.17.21",
    "lru-cache": "^10.0.0",
    "mkdirp": "^3.0.1",
    "mock-require": "^3.0.3",
    "openai": "^3.2.1",
    "os-browserify": "^0.3.0",
    "socks-proxy-agent": "^8.0.1",
    "stream-json": "^1.8.0",
    "unzipper": "^0.10.14",
    "uuid": "^9.0.0",
    "vscode-languageserver-textdocument": "^1.0.8",
    "vscode-uri": "^3.0.7",
    "web-tree-sitter": "^0.20.8",
    "wink-eng-lite-web-model": "^1.5.0",
    "wink-nlp": "^1.13.1",
    "wink-nlp-utils": "^2.1.0"
  },
  "devDependencies": {
    "@google-cloud/pubsub": "^3.7.3",
    "@playwright/test": "^1.33.0",
    "@types/axios": "^0.14.0",
    "@types/dedent": "^0.7.0",
    "@types/express": "^4.17.17",
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/js-levenshtein": "^1.1.1",
    "@types/lodash": "^4.14.195",
    "@types/mocha": "^10.0.1",
    "@types/mock-require": "^2.0.1",
    "@types/progress": "^2.0.5",
    "@types/semver": "^7.5.0",
    "@types/unzipper": "^0.10.7",
    "@types/uuid": "^9.0.2",
    "@types/vscode": "^1.79.0",
    "@types/vscode-webview": "^1.57.1",
    "@vscode/test-electron": "^2.3.2",
    "@vscode/test-web": "^0.0.44",
    "@vscode/vsce": "^2.19.0",
    "chalk": "^4.1.2",
    "cody-icons-font": "workspace:^",
    "concurrently": "^8.2.0",
    "dedent": "^0.7.0",
    "envalid": "^7.3.1",
    "express": "^4.18.2",
    "mocha": "^10.2.0",
    "ovsx": "^0.8.2",
    "path-browserify": "^1.0.1",
    "playwright": "^1.33.0",
    "progress": "^2.0.3",
    "semver": "^7.5.4"
  }
}
